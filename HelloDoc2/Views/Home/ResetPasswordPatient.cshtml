@*    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860*@@{    Layout = null;}@model DAL.ViewModel.CreateAccount<!doctype html><html lang="en"><head>    <meta charset="utf-8">    <meta name="viewport" content="width=device-width, initial-scale=1">    <title>Reset Password</title>    <link rel="stylesheet" href="~/css/bootstrap.min.css">    <link rel="stylesheet" href="~/css/Patientlogin.css">    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet"          integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.3.0/font/bootstrap-icons.css">    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.13.0/css/all.min.css"></head><body>    <div>        <img class="bgimg" src="~/images/login-banner.png">    </div>    <form method="post" asp-action="ResetPasswordPatient" asp-controller="Home">        <div class="container-fluid h-100">            <a href="#"><i onclick="myFunction()" class="bi bi-moon moonclass"></i></a>            <div class="row justify-content-center align-items-center h-100">                <div class="col col-sm-6 col-md-6 col-lg-4 col-xl-3 patient-login">                    <div>                        <img class="doctorimage d-flex justify-content-center " src="~/images/Fig56. Patient site 1.png"                             alt="">                    </div>                    <div class="main-content">                        <a asp-action="Index" asp-controller="Home" class="redirect"><p class="back">&lt; <strong>Back</strong> </p></a>                        <h3 class="d-flex justify-content-center align-items-center">Reset Your Password</h3><br>                        <input asp-for="UserName" value="@ViewBag.Email" hidden />                        <input asp-for="Token" value="@ViewBag.Code" hidden />                        <div class="form-floating mb-3">                            <div class="form-floating mb-3" style="position: relative;">                                <i id="togglePassword" class="bi bi-eye-slash" style="position: absolute; right: 1em; top: 1em; cursor: pointer;"></i>                                <input asp-for="PasswordHash" type="password" class="form-control" id="id_password" placeholder="Password" required>                                <label for="floatingInput">Password</label>                                <span asp-validation-for="PasswordHash" class="text-danger"></span>                            </div>                            <div class="form-floating" style="position: relative;">                                <i id="togglePassword1" class="bi bi-eye-slash" style="position: absolute; right: 1em; top: 1em; cursor: pointer;"></i>                                <input asp-for="ConfirmPassword" type="password" class="form-control" id="id_password1" placeholder="Password" required>                                <label for="floatingInput">Confirm Password</label>                                <span asp-validation-for="ConfirmPassword" class="text-danger"></span>                            </div>                                                    <div>                            @if (TempData["passerror"] != null)                            {                                <span class="text-danger mt-4">@TempData["passerror"]</span>                                <br />                            }                            @if (TempData["notvalidemail"] != null)                            {                                <span class="text-danger mt-4">@TempData["notvalidemail"]</span>                                <br />                            }                                <button type="submit" class="btn btn-primary user mt-2" id="loginbtn">Reset</button>                        </div>                    </div>                </div>                <div class="d-flex justify-content-center downtext">                    <a href="#" class="terms">Terms of Condition</a>                    <p class="pipe"> | </p>                    <a href="#" class="privacy"> Privacy Policy</a>                </div>                                            </div>        </div>    </form>    @section Scripts {        @{            await Html.RenderPartialAsync("_ValidationScriptsPartial");        }    }    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"            integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL"            crossorigin="anonymous"></script>    <script>        const darkmodetoggle = document.getElementById('darkmode-toggle')        function toggleTheme() {            document.body.classList.toggle('dark-theme');        }    </script>    <script>        const togglePassword = document.querySelector('#togglePassword');        const password = document.querySelector('#id_password');        togglePassword.addEventListener('click', function (e) {            // toggle the type attribute            const type = password.getAttribute('type') === 'password' ? 'text' : 'password';            password.setAttribute('type', type);            // toggle the eye slash icon            console.log(type)            if (type === 'password') {                togglePassword.classList.remove('bi', 'bi-eye-slash', 'bi-eye')                togglePassword.classList.add('bi', 'bi-eye-slash')            }            else {                togglePassword.classList.remove('bi', 'bi-eye-slash', 'bi-eye')                togglePassword.classList.add('bi', 'bi-eye')            }            // this.classList.toggle("bi-eye-slash")        });        const togglePassword1 = document.querySelector('#togglePassword1');        const password1 = document.querySelector('#id_password1');        togglePassword1.addEventListener('click', function (r) {            // toggle the type attribute            const type1 = password1.getAttribute('type') === 'password' ? 'text' : 'password';            password1.setAttribute('type', type1);            // toggle the eye slash icon            // console.log(type)            if (type1 === 'password') {                togglePassword1.classList.remove('bi', 'bi-eye-slash', 'bi-eye')                togglePassword1.classList.add('bi', 'bi-eye-slash')            }            else {                togglePassword1.classList.remove('bi', 'bi-eye-slash', 'bi-eye')                togglePassword1.classList.add('bi', 'bi-eye')            }            // this.classList.toggle("bi-eye-slash")        });    </script></body></html>